// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v5.26.1
// source: proto/supplier.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "supplier";

export interface Empty {
}

export interface Suppliers {
  suppliers: Supplier[];
}

export interface Supplier {
  id: string;
  name: string;
  surname?: string | undefined;
}

export const SUPPLIER_PACKAGE_NAME = "supplier";

export interface SupplierServiceClient {
  findAllSuppliers(request: Empty): Observable<Suppliers>;
}

export interface SupplierServiceController {
  findAllSuppliers(request: Empty): Promise<Suppliers> | Observable<Suppliers> | Suppliers;
}

export function SupplierServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findAllSuppliers"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("SupplierService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("SupplierService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const SUPPLIER_SERVICE_NAME = "SupplierService";
